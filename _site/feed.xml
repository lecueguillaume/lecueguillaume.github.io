<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage of Guillaume Lecué</title>
    <description>Empirical processes theory; Learning theory; Compressed sensing; aggregation; phase retreival; Minimax;</description>
    <link>http://lecueguillaume.github.io//</link>
    <atom:link href="http://lecueguillaume.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 18 Jun 2017 12:22:14 +0200</pubDate>
    <lastBuildDate>Sun, 18 Jun 2017 12:22:14 +0200</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Restore variables after notebook crashed</title>
        <description>&lt;h1 id=&quot;recover-variables-after-a-cell-in-a-python-notebook-fails&quot;&gt;Recover variables after a cell in a python notebook fails&lt;/h1&gt;
&lt;p&gt;After python lost connexion with my browser (here safari) while using Jupyter notebook&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WebSocket ping timeout after 91539 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I wanted to recover some variables like a dictionary. I should have use the &lt;strong&gt;try: except:&lt;/strong&gt; protocole but I did not so I end up with a notebook not working and variables that I was not able to get back. Here is a solution that worked for me:&lt;/p&gt;

&lt;p&gt;1) I interrupted the kernel&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Kernel interrupted: d3d55f0d-52f1-4660-a43b-1fedb698452f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(I got the address of the kernel. Note that it is different from the Kernel address when it started: f757186e-0570-467a-918e-934bb48dee45)&lt;/p&gt;

&lt;p&gt;2) I went to the terminal and typed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ipython console --existing d3d55f0d-52f1-4660-a43b-1fedb698452f.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This opened an ipython consol (you can replace &lt;em&gt;ipython&lt;/em&gt; with &lt;em&gt;jupyter&lt;/em&gt;)&lt;/p&gt;

&lt;p&gt;3) I listed all the local variables to check that my &lt;em&gt;dictionary&lt;/em&gt; was in there:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;locals()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was pretty happy to see my variable &lt;em&gt;dict_final&lt;/em&gt; in the list.&lt;/p&gt;

&lt;p&gt;4) then I &lt;em&gt;pickle.dump&lt;/em&gt; my dictionary in the consol:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import pickle
filename = &#39;dict_final.p&#39;
with open(filename, &quot;wb&quot;) as f:
    pickle.dump(dict_final, f)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5) Once my variable has been pickled down, I can load it in any other notebook where I want to use it via (in a notebook):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import pickle
filename = &#39;dict_final.p&#39;
with open(filename, &quot;r&quot;) as f:
    pickle.load(dict_final, f)
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Mon, 19 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://lecueguillaume.github.io//2017/06/19/recover_variables_python/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2017/06/19/recover_variables_python/</guid>
        
        
      </item>
    
      <item>
        <title>Structured Regularization for High-Dimensional Data Analysis</title>
        <description>&lt;p&gt;Yohann de Castro, Gabriel Peyré and I are organizing a &lt;a href=&quot;https://regularize-in-paris.github.io&quot;&gt;conference&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 19 Jun 2017 00:00:00 +0200</pubDate>
        <link>http://lecueguillaume.github.io//2017/06/19/conf/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2017/06/19/conf/</guid>
        
        
      </item>
    
      <item>
        <title>Installation de CVXPY sous windows.</title>
        <description>&lt;p&gt;a) On suppose que Anaconda et CVXOPT sont installés&lt;/p&gt;

&lt;p&gt;b) Aller sur &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/&quot;&gt;librairies python pour windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c) Télécharger :&lt;/p&gt;

&lt;p&gt;1) &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#ecos&quot;&gt;ecos pour win64 et python 3.5&lt;/a&gt; télécharger 
    * ecos‑2.0.4‑cp35‑cp35m‑win_amd64.whl *&lt;/p&gt;

&lt;p&gt;2) &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#ecos&quot;&gt;SCS&lt;/a&gt; télécharger 
    * scs‑1.2.6‑cp35‑cp35m‑win_amd64.whl *&lt;/p&gt;

&lt;p&gt;3) &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#ecos&quot;&gt;cvxpy pour win64 et python 3.5&lt;/a&gt;
    * cvxpy‑0.4.9‑py3‑none‑any.whl * &lt;/p&gt;

&lt;p&gt;d) ouvrir un éditeur de commandes en mode admin&lt;/p&gt;

&lt;p&gt;e) taper &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install &quot;chemin du fichier ecos&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;f) taper &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install &quot;chemin du fichier SCS&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;g) taper &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install &quot;chemin du fichier cvxpy&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;f) tester en tapant “python” puis &lt;enter&gt; dans le terminal et en exécutant la ligne de code suivante: &quot;import cvxpy&quot;. Si l&#39;installation est réussie, le prompt revient sans erreur.&lt;/enter&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2017/03/14/installation-cvxpy/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2017/03/14/installation-cvxpy/</guid>
        
        
      </item>
    
      <item>
        <title>Installation de CVXOPT sous windows.</title>
        <description>&lt;!-- &lt;font face=&quot;verdana&quot; size=&#39;8&#39; color=&#39;red&#39;&gt; Planning des soutenances&lt;/font&gt; 

[&lt;center&gt;&lt;font face=&quot;verdana&quot; size=&#39;8&#39; color=&#39;blue&#39;&gt; ici &lt;/font&gt;&lt;/center&gt;](/assets/planning_soutenance_cs_15_16.pdf)



&lt;font face=&quot;verdana&quot; size=&#39;8&#39; color=&#39;red&#39;&gt; Liste des articles proposés&lt;/font&gt; 

[&lt;center&gt;&lt;font face=&quot;verdana&quot; size=&#39;8&#39; color=&#39;blue&#39;&gt; ici &lt;/font&gt;&lt;/center&gt;](/assets/liste_projets.pdf) --&gt;
&lt;p&gt;a) installer Anaconda&lt;/p&gt;

&lt;p&gt;b) Aller sur &lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/&quot;&gt;librairies python pour windows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c) Télécharger :&lt;/p&gt;

&lt;p&gt;1) &lt;a href=&quot;numpy‑1.12.0+mkl‑cp35‑cp35m‑win_amd64.whl&quot;&gt;numpy pour win64 et python 3.5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;a href=&quot;cvxopt‑1.1.9‑cp35‑cp35m‑win_amd64.whl&quot;&gt;cvxopt pour win64 et python 3.5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;d) ouvrir un éditeur de commandes en mode admin&lt;/p&gt;

&lt;p&gt;e) taper &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install &quot;chemin du fichier numpy&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;f) taper &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install &quot;chemin du fichier cvxopt&quot;
&lt;/code&gt;&lt;/pre&gt;

</description>
        <pubDate>Tue, 28 Feb 2017 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2017/02/28/installation-cvxopt-windows/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2017/02/28/installation-cvxopt-windows/</guid>
        
        
      </item>
    
      <item>
        <title>Organisation des soutenances de mémoires pour le cours de Compressed Sensing -- année 2017.</title>
        <description>&lt;font face=&quot;verdana&quot; size=&quot;8&quot; color=&quot;red&quot;&gt; Planning des soutenances&lt;/font&gt;

&lt;p&gt;&lt;a href=&quot;/assets/planning_soutenance_cs_16_17.pdf&quot;&gt;&lt;center&gt;&lt;font face=&quot;verdana&quot; size=&quot;8&quot; color=&quot;blue&quot;&gt; ici &lt;/font&gt;&lt;/center&gt;&lt;/a&gt;&lt;/p&gt;

&lt;font face=&quot;verdana&quot; size=&quot;8&quot; color=&quot;red&quot;&gt; Liste des articles proposés&lt;/font&gt;

&lt;p&gt;&lt;a href=&quot;/assets/liste_projets.pdf&quot;&gt;&lt;center&gt;&lt;font face=&quot;verdana&quot; size=&quot;8&quot; color=&quot;blue&quot;&gt; ici &lt;/font&gt;&lt;/center&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!-- &lt;font face=&quot;verdana&quot; size=&#39;8&#39; color=&#39;red&#39;&gt; Date limite d&#39;inscription : vendredi 3 mars&lt;/font&gt;
(C&#39;est une date ferme : les élèves non-inscrits à cette date ne pourront pas passer l&#39;examen.) --&gt;

&lt;p&gt;A chaque groupe de deux élèves sera remis un ou plusieurs articles de recherche en lien avec le cours. Plusieurs niveaux d’implication dans le projet sont possibles :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;présenter l’article (problématique, procédures, résultats, algorithmes, simulations, faire ressortir les idées clefs, etc.)&lt;/li&gt;
  &lt;li&gt;démontrer les résultats mathématiques&lt;/li&gt;
  &lt;li&gt;reproduire les simulations&lt;/li&gt;
  &lt;li&gt;faire une critique personnelle et proposer des idées nouvelles de procédures, de résultats, de simulations, etc.&lt;/li&gt;
  &lt;li&gt;proposer des parallèles avec d’autres sujets. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La validation et l’évaluation du cours de Compressed Sensing se fera sur la base :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;d’un mémoire d’au plus 10 pages (en Latex)&lt;/li&gt;
  &lt;li&gt;D’un notebook commenté en python (s’il y a des simulations)&lt;/li&gt;
  &lt;li&gt;d’une soutenance de 15 minutes, suivie de 5 minutes de questions sur le projet et de 5 minutes de questions de cours pour chacun des deux élèves du groupe.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La note attribuée à chaque élève dépend :
1. du travail de groupe (niveau de compréhension et regard critique des élèves sur le travail de recherche qui leur a été confié; ainsi que de la qualité du code, s’il y en a) 
2. des réponses personnelles de chaque élève du groupe aux questions de cours.&lt;/p&gt;

&lt;p&gt;Les élèves souhaitant passer cet examen sont invités à mettre en commentaire de ce post, les noms des deux personnes constituant le groupe. S’ils le souhaitent, les élèves sont invités  à proposer une ou des requêtes particulières sur le type ou le ou les article(s) qu’ils souhaitent étudier. Ca peut être, par exemple, un sujet précis, des liens vers des articles, une thématique, une orientation ‘plus mathématique’, ‘plus appliquée’, etc.. 
Cependant, même si les organisateurs feront leur maximum pour répondre à l’ensemble de ces requêtes, il se peut qu’elles ne soient pas toutes satisfaites lors de l’attribution des sujets.&lt;/p&gt;

&lt;p&gt;ATTENTION : pour faire valider ce cours, les élèves doivent être enregistrés pour ce cours auprès de l’administration dont ils dépendent. Poster un commentaire sur ce blog n’a pas de valeur administrative. &lt;/p&gt;

</description>
        <pubDate>Mon, 06 Feb 2017 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2017/02/06/organisation-soutenance-cours-cs/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2017/02/06/organisation-soutenance-cours-cs/</guid>
        
        
      </item>
    
      <item>
        <title>Rappels de statistiques mathématiques</title>
        <description>&lt;h1 id=&quot;cours-1--slidesassetscours1ensae2016pdf--notebook-downloadassetscdfempiriqueipynb--notebook-githttpnbviewerjupyterorggithublecueguillaumelecueguillaumegithubioblobmasterassetscdfempiriqueipynb&quot;&gt;&lt;strong&gt;Cours 1&lt;/strong&gt; : &lt;a href=&quot;/assets/cours1_ensae_2016.pdf&quot;&gt;slides&lt;/a&gt; | &lt;a href=&quot;/assets/cdf_empirique.ipynb&quot;&gt;notebook download&lt;/a&gt; | &lt;a href=&quot;http://nbviewer.jupyter.org/github/lecueguillaume/lecueguillaume.github.io/blob/master/assets/cdf_empirique.ipynb&quot;&gt;notebook git&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-2---slidesassetscours2ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 2&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours2_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;/assets/rm_quantile.ipynb&quot;&gt;notebook Robbins-Monro download&lt;/a&gt; | &lt;a href=&quot;http://nbviewer.jupyter.org/github/lecueguillaume/notebooks_python/blob/master/cours_statistiques/rm_quantile.ipynb&quot;&gt;notebook Robbins-Monro git&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;/assets/rm_quantile.ipynb&quot;&gt;notebook qqplot download&lt;/a&gt; | &lt;a href=&quot;http://nbviewer.jupyter.org/github/lecueguillaume/notebooks_python/blob/master/cours_statistiques/box_qqplots.ipynb&quot;&gt;notebook qqplot git&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;cours-3---slidesassetscours3ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 3&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours3_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-4---slidesassetscours4ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 4&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours4_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-5--slidesassetscours5ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 5&lt;/strong&gt; : &lt;a href=&quot;/assets/cours5_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-6---slidesassetscours6ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 6&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours6_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-7---slidesassetscours7ensae2015pdf&quot;&gt;&lt;strong&gt;Cours 7&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours7_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;cours-8---slidesassetscours8ensae2015pdf--notebook-downloadassetslinearregressionipynb--notebook-githttpnbviewerjupyterorggithublecueguillaumenotebookspythonblobmastercoursstatistiqueslinearregressionipynb--dataassetsdatapngnbreglinzip&quot;&gt;&lt;strong&gt;Cours 8&lt;/strong&gt;  : &lt;a href=&quot;/assets/cours8_ensae_2015.pdf&quot;&gt;slides&lt;/a&gt; | &lt;a href=&quot;/assets/linear_regression.ipynb&quot;&gt;notebook download&lt;/a&gt; | &lt;a href=&quot;http://nbviewer.jupyter.org/github/lecueguillaume/notebooks_python/blob/master/cours_statistiques/linear_regression.ipynb&quot;&gt;notebook git&lt;/a&gt; | &lt;a href=&quot;/assets/data_png_nb_reg_lin.zip&quot;&gt;data&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&quot;recueil-dexercices-corrigs--pdfassetsexosrappelsstatsensaepdf&quot;&gt;Recueil d’exercices corrigés : &lt;a href=&quot;/assets/exos_rappels_stats_ensae.pdf&quot;&gt;pdf&lt;/a&gt;&lt;/h1&gt;

</description>
        <pubDate>Thu, 01 Sep 2016 13:59:13 +0200</pubDate>
        <link>http://lecueguillaume.github.io//2016/09/01/rappels-stats/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2016/09/01/rappels-stats/</guid>
        
        
      </item>
    
      <item>
        <title>real time edition via etherpad</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://etherpad.org&quot;&gt;Etherpad&lt;/a&gt; is a really-real time collaborative editor. Here is how I installed it and use it now. &lt;/p&gt;

&lt;p&gt;a) clone the repo :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;git clone https://github.com/ether/etherpad-lite.git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;b) enter the directory&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;cd etherpad-lite/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;c) run the run.sh &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;bash bin/run.sh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;d) access your Etherpad at http://0.0.0.0:9001/ in your browser&lt;/p&gt;

&lt;p&gt;e) Create a Pad by giving it a name ‘new_pad’&lt;/p&gt;

&lt;p&gt;f) share it with the address http://0.0.0.0:9001/p/new_pad&lt;/p&gt;
</description>
        <pubDate>Tue, 24 May 2016 00:00:00 +0200</pubDate>
        <link>http://lecueguillaume.github.io//2016/05/24/real-time-edition-via-etherpad/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2016/05/24/real-time-edition-via-etherpad/</guid>
        
        
      </item>
    
      <item>
        <title>Create a python 3 session under anaconda</title>
        <description>&lt;p&gt;Here are some explanations to create a python 3 environment under Anaconda. &lt;/p&gt;

&lt;p&gt;a) create an environment for python 3  :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;conda create -n python3 python=3.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;b) switch to this environement by typing&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;source activate python3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;c) install some libraries if needed &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;conda install unidecode &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;d) if you want to go back to python 2&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;source deactivate&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Tue, 22 Mar 2016 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2016/03/22/python-3/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2016/03/22/python-3/</guid>
        
        
      </item>
    
      <item>
        <title>Install glpk with CVXOPT on python</title>
        <description>&lt;p&gt;Here are some explaination on how to install glpk and CVXOPT (on MAC). Using option ‘glpk’ in solvers.lp method of CVXOPT speeds up cvxopt by a factor of 2 or 10  according to  &lt;a href=&quot;https://scaron.info/blog/linear-programming-in-python-with-cvxopt.html&quot;&gt;Stephane Caron’s webpage&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;a) Install glpk via brew :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;brew install glpk&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;b) The GLPK interface is not enabled by default. You need to edit the setup.py of CVXOPT. In my case, I have this file in the following folder&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Google\ Drive/package_python/cvxopt-1.1.7/setup.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First thing, set variable BUILD_GLPK to 1: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BUILD_GLPK = 1 &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then indicate the path to &lt;em&gt;libglpk&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GLPK_LIB_DIR = ‘/usr/local/Cellar/glpk/4.52/lib’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then indicate the path to &lt;em&gt;glpk.h&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GLPK_INC_DIR = ‘/usr/local/Cellar/glpk/4.52/include’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;c) Go to the CVXOPT’s ‘setup.py’ folder and run&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;python setup.py install&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;d) Enjoy CVXOPT with glpk :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sol = solvers.lp(c, G, h, A, b, solver = ‘glpk’)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 27 Feb 2016 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2016/02/27/cvxopt-glpk-basis-pursuit/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2016/02/27/cvxopt-glpk-basis-pursuit/</guid>
        
        
      </item>
    
      <item>
        <title>Edit shortcuts in bash</title>
        <description>&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open the &lt;em&gt;.bash_profile&lt;/em&gt; file with your favorite editor (for instance C-x C-f in emacs and search for the file: ~/.bash_profile)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write your aliases in the &lt;em&gt;.bash_profile&lt;/em&gt; like:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;alias vw1=’vw click_train.vw -c -k –passes 10 –loss_function=logistic –link=logistic -f click_model.vw’&lt;/li&gt;
  &lt;li&gt;alias vw2=’vw click_test.vw -t -i click_model.vw -p click_predictions.txt’&lt;/li&gt;
  &lt;li&gt;alias score=’python score_vw.py click_test.vw click_predictions.txt ‘&lt;/li&gt;
  &lt;li&gt;alias nb=’ipython notebook’&lt;/li&gt;
  &lt;li&gt;alias py3=’source activate python3’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first three aliases are for vowpal wabbit routines I’ve been using a lot. &lt;/p&gt;

&lt;p&gt;The fourth one is really useful to launch Ipython Notebook. &lt;/p&gt;

&lt;p&gt;The last one is to switch to python 3. Before that I had to create a ‘conda’ environment for python 3 with&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;conda create -n python3 python=3.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Force the .bash_profile to execute. This loads the values immediately without having to reboot. In your Terminal window, run the following command.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ source ~/.bash_profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;Then, enjoy your shortcuts in Terminal! Launch a notebook in python 3 with just 4 letters and 1 number!&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;$ macbook-pro-de-lecue:~ lecueguillaume$ py3&lt;/p&gt;

  &lt;p&gt;discarding /Users/lecueguillaume/anaconda/bin from PATH&lt;/p&gt;

  &lt;p&gt;prepending /Users/lecueguillaume/anaconda/envs/python3/bin to PATH&lt;/p&gt;

  &lt;p&gt;$ (python3)macbook-pro-de-lecue:~ lecueguillaume$ nb&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 00:00:00 +0100</pubDate>
        <link>http://lecueguillaume.github.io//2016/01/26/edit-short-cuts-bash/</link>
        <guid isPermaLink="true">http://lecueguillaume.github.io//2016/01/26/edit-short-cuts-bash/</guid>
        
        
      </item>
    
  </channel>
</rss>
